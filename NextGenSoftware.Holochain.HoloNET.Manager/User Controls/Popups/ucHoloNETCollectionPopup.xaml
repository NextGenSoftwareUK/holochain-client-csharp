<UserControl x:Class="NextGenSoftware.Holochain.HoloNET.Manager.UserControls.ucHoloNETCollectionPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:local="clr-namespace:NextGenSoftware.Holochain.HoloNET.Manager.UserControls"
             xmlns:uc="clr-namespace:NextGenSoftware.Holochain.HoloNET.Manager.UserControls"
             xmlns:managers="clr-namespace:NextGenSoftware.Holochain.HoloNET.Manager.Managers"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/NextGenSoftware.Holochain.HoloNET.Manager;component/Resources/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.DataContext>
        <managers:HoloNETManager />
    </UserControl.DataContext>

    <Grid Opacity="0.9" Grid.Row="0" Grid.RowSpan="6">
        <Grid Background="Transparent" Opacity="0.5"/>
        <Border Width="780" Height="670"
                Background="DarkBlue" 
                Opacity="50"
                BorderBrush="Black" 
                BorderThickness="1" 
                CornerRadius="0,55,0,55" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center">
            <StackPanel>
                <TextBlock Margin="10,20,10,20" Text="HoloNET Collection (Internal Connection)" HorizontalAlignment="Center" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="20"  />

                <StackPanel Orientation="Horizontal" Margin="10">
                    <Button IsEnabled="False" x:Name="btnViewHoloNETCollection" Content="Collection" Style="{StaticResource ButtonStyle}" Cursor="Hand" Margin="10" Foreground="WhiteSmoke" Width="170" FontSize="16" Background="{x:Null}" Click="btnViewHoloNETCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnViewHoloNETCollectionGlowEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
      Storyboard.TargetName="btnViewHoloNETCollectionGlowEffect" 
      Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
      From="0.0" To="1.0" Duration="0:0:0.5" 
      AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
      Storyboard.TargetName="btnViewHoloNETCollectionGlowEffect" 
      Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
      From="1" To="0" Duration="0:0:0.5" 
      AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnViewHoloNETCollectionInfo" Content="Information" Style="{StaticResource ButtonStyle}" Cursor="Hand" Margin="10" Foreground="WhiteSmoke" Width="170" FontSize="16" Background="{x:Null}" Click="btnViewHoloNETCollectionInfo_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnViewHoloNETCollectionInfoGlowEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
      Storyboard.TargetName="btnViewHoloNETCollectionInfoGlowEffect" 
      Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
      From="0.0" To="1.0" Duration="0:0:0.5" 
      AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
      Storyboard.TargetName="btnViewHoloNETCollectionInfoGlowEffect" 
      Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
      From="1" To="0" Duration="0:0:0.5" 
      AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="stkpnlHoloNETCollectionInternal">
                    <DataGrid Grid.Row="1" x:Name="gridDataEntriesInternal" AutoGenerateColumns="False" Height="200" SelectionMode="Single" SelectedCellsChanged="gridDataEntriesInternal_SelectedCellsChanged"  HeadersVisibility="Column" Margin="10" IsReadOnly="true"  RowBackground="DarkBlue" AlternatingRowBackground="Blue"  Background="Transparent"  Foreground="White">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="80" Header="First Name" Binding="{Binding Path=FirstName}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="80" Header="Last Name" Binding="{Binding Path=LastName}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="70" Header="DOB" Binding="{Binding Path=DOB}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="150" Header="Email" Binding="{Binding Path=Email}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="80" Header="State" Binding="{Binding Path=State}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Id" Binding="{Binding Path=Id}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Entry Hash" Binding="{Binding Path=EntryHash}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Created Date" Binding="{Binding Path=CreatedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Created By" Binding="{Binding Path=CreatedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Modified Date" Binding="{Binding Path=ModifiedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Modified By" Binding="{Binding Path=ModifiedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Deleted Date" Binding="{Binding Path=DeletedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Deleted By" Binding="{Binding Path=DeletedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Active" Binding="{Binding Path=IsActive}" CanUserSort="True" ></DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Blue" />
                            </Style>

                            <ResourceDictionary x:Key="gridResources">
                                <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ResourceDictionary>
                        </DataGrid.Resources>
                    </DataGrid>
                    <uc:ucHoloNETEntry Height="230" x:Name="ucHoloNETCollectionEntryInternal" DataContext="{Binding ElementName=gridDataEntriesInternal, Path=SelectedItem, Mode=OneWay}"></uc:ucHoloNETEntry>
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="stkpnlInfoHoloNETCollection" Visibility="Collapsed" Height="450">
                    <ScrollViewer Margin="10" Height="425">
                        <StackPanel Orientation="Vertical" Margin="10">
                            <TextBlock Foreground="WhiteSmoke" FontSize="16" TextWrapping="WrapWithOverflow" Text="This popup (ucHoloNETCollectionPopup.xaml) shows how to use the HoloNETObservableCollection class in HoloNET ORM allowing you to manage a collection of HoloNET Entries (any class that extends from either the HoloNETEntryBase or HoloNETAuditEntryBase class) without having to worry about the lower complexities of Holochain or configure and use the Holochain Conductor or API's. You can easily add or remove HoloNET Entries by calling AddHoloNETEntryToCollectionAndSave or RemoveHoloNETEntryFromCollectionAndSave. These will both add/remove the entry and then update/save the collection. If you wish to only add or remove the entry from memory but not yet persist the changes then use the Add or Remove methods. You can then later batch update all changes by calling the SaveAllChanges method, this will also save any changes made to any of the HoloNET Entries in the collection. In this example, it is using the SaveAllChanges method to batch update all entries. In this example the HoloNETObservableCollection class is configured to use it's own internal HoloNET Client so no existing client needs to be injected in. It will automatically create it's own internal client and then dispose of it when the HoloNETObservableCollection is closed by calling the Close method on it. As the default, it will also automatically start and shutdown the Holochain Conductor, but in this example it has been configured using the HoloNETDNA injected in to the HoloNETObservableCollection constructor (DI) to not auto-start or shutdown the conductor because HoloNET Manager has already done this for us. When you use this HoloNETObservableCollection class in a standalone app, site, game etc then you would leave this on the default to auto-start and shutdown the conductor."></TextBlock>
                            <TextBlock Margin="0,10,0,0" FontSize="16" Foreground="WhiteSmoke" TextWrapping="WrapWithOverflow" Text="The new HoloNET ORM (Object Relational Mapping) allows very easy &amp; rapid development of hApps. This consists of the HoloNETEntryBase, HoloNETAuditEntryBase, HoloNETCollection and HoloNETObservsableCollection classes. The first two can be extended to create your HoloNET Entry models that map directly onto your data structs in your rust hApp zome code. The second two are collections of these entries. You can then simply call basic CRUD methods on your classes such as Load, Save, Delete, etc making it very quick and easy to build hApps without having to worry about the lower complexitites of Holochain or configure and use the Holochain Conductor or API's. You also get change tracking, version control &amp; rollback functionality for free. HoloNET ORM allows any existing .net app/website/game/service to be rapidly and quickly converted to a Holochain hApp with very little code changes (you can simply add a new attribute to the properties in your models) and it will now map to your rust hApp structs (which WEB5 STAR ODK can also dynamically generate (it generates rust and c# code)."></TextBlock>
                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>

                <StackPanel Margin="20,20,0,0" Orientation="Horizontal" VerticalAlignment="Bottom"  HorizontalAlignment="Center">
                    <Button x:Name="btnHoloNETCollectionPopupClose" Style="{StaticResource ButtonStyle}" Cursor="Hand" Margin="5" Foreground="WhiteSmoke" HorizontalAlignment="Center" Width="170" FontSize="16" Content="Close" Background="{x:Null}" Click="btnHoloNETCollectionPopupClose_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETCollectionPopupCloseGlowEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupCloseGlowEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupCloseGlowEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnHoloNETCollectionPopupAddEntryToCollection" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Add Entry" Background="{x:Null}" Click="btnHoloNETCollectionPopupAddEntryToCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETCollectionPopupAddEntryToCollectionEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupAddEntryToCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupAddEntryToCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="btnHoloNETCollectionPopupRemoveEntryFromCollection" IsEnabled="False"  Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Remove Entry" Background="{x:Null}" Click="btnHoloNETCollectionPopupRemoveEntryFromCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETCollectionPopupRemoveEntryFromCollectionEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupRemoveEntryFromCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupRemoveEntryFromCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <!--<Button x:Name="btnHoloNETCollectionPopupSaveChanges" IsEnabled="{Binding Instance.HoloNETEntries.IsChanges}" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="14" Content="Save Changes" Background="{x:Null}" Click="btnHoloNETCollectionPopupSaveChanges_Click">-->
                    <Button x:Name="btnHoloNETCollectionPopupSaveChanges" IsEnabled="False" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Save Changes" Background="{x:Null}" Click="btnHoloNETCollectionPopupSaveChanges_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETCollectionPopupSaveChangesEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupSaveChangesEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETCollectionPopupSaveChangesEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
