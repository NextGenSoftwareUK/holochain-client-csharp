<UserControl x:Class="NextGenSoftware.Holochain.HoloNET.Manager.UserControls.ucHoloNETEntryAndCollectionSharedPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:local="clr-namespace:NextGenSoftware.Holochain.HoloNET.Manager.UserControls"
             xmlns:uc="clr-namespace:NextGenSoftware.Holochain.HoloNET.Manager.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/NextGenSoftware.Holochain.HoloNET.Manager;component/Resources/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Opacity="0.9" Grid.Row="0" Grid.RowSpan="6">
        <Grid Background="Transparent" Opacity="0.5" />
        <Border Width="770" Height="650"
        Background="DarkBlue" 
        Opacity="50"
        BorderBrush="Black" 
        BorderThickness="1" 
        CornerRadius="0,55,0,55" 
        HorizontalAlignment="Center" 
        VerticalAlignment="Center">
            <StackPanel Orientation="Vertical" Height="650" Margin="0,10,0,0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="btnShowHoloNETEntryShared" IsEnabled="False" Margin="10" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="HoloNET Entry" Background="{x:Null}" Click="btnShowHoloNETEntryShared_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnShowHoloNETEntrySharedEffect" ShadowDepth="0"
                          Color="White"
                          Opacity="0"
                          BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
    Storyboard.TargetName="btnShowHoloNETEntrySharedEffect" 
    Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
    From="0.0" To="1.0" Duration="0:0:0.5" 
    AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
    Storyboard.TargetName="btnShowHoloNETEntrySharedEffect" 
    Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
    From="1" To="0" Duration="0:0:0.5" 
    AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnShowHoloNETCollection" Margin="10" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="HoloNET Collection" Background="{x:Null}" Click="btnShowHoloNETCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnShowHoloNETCollectionEffect" ShadowDepth="0"
                      Color="White"
                      Opacity="0"
                      BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
Storyboard.TargetName="btnShowHoloNETCollectionEffect" 
Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
From="0.0" To="1.0" Duration="0:0:0.5" 
AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
Storyboard.TargetName="btnShowHoloNETCollectionEffect" 
Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
From="1" To="0" Duration="0:0:0.5" 
AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnHoloNETEntrySharedInfo" IsEnabled="True" Margin="10" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Information" Background="{x:Null}" Click="btnHoloNETEntrySharedInfo_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETEntrySharedInfoEffect" ShadowDepth="0"
                          Color="White"
                          Opacity="0"
                          BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
    Storyboard.TargetName="btnHoloNETEntrySharedInfoEffect" 
    Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
    From="0.0" To="1.0" Duration="0:0:0.5" 
    AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
    Storyboard.TargetName="btnHoloNETEntrySharedInfoEffect" 
    Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
    From="1" To="0" Duration="0:0:0.5" 
    AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="stkpnlHoloNETEntryShared">
                    <TextBlock Margin="10,10,10,20" Text="HoloNET Data Entry (Shared Connection)" HorizontalAlignment="Center" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="20"  />
                    <uc:ucHoloNETEntry x:Name="ucHoloNETEntryShared"></uc:ucHoloNETEntry>
                    <TextBlock Margin="10,10,10,20" Text="Meta Data" HorizontalAlignment="Center" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="14"  />
                    <uc:ucHoloNETEntryMetaData Height="151" Width="730" x:Name="ucHoloNETEntrySharedMetaData"></uc:ucHoloNETEntryMetaData>
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="stkpnlHoloNETCollection" Visibility="Collapsed" Height="500">
                    <TextBlock Margin="10,10,10,20" Text="HoloNET Collection (Shared Connection)" HorizontalAlignment="Center" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="20"  />

                    <DataGrid Grid.Row="1" x:Name="gridDataEntries" AutoGenerateColumns="False" Height="200" SelectionMode="Single" SelectedCellsChanged="gridDataEntries_SelectedCellsChanged"  HeadersVisibility="Column" Margin="10" IsReadOnly="true"  RowBackground="DarkBlue" AlternatingRowBackground="Blue"  Background="Transparent"  Foreground="White">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="80" Header="First Name" Binding="{Binding Path=FirstName}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="80" Header="Last Name" Binding="{Binding Path=LastName}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="70" Header="DOB" Binding="{Binding Path=DOB}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="150" Header="Email" Binding="{Binding Path=Email}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="80" Header="State" Binding="{Binding Path=State}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Id" Binding="{Binding Path=Id}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Entry Hash" Binding="{Binding Path=EntryHash}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Created Date" Binding="{Binding Path=CreatedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Created By" Binding="{Binding Path=CreatedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Modified Date" Binding="{Binding Path=ModifiedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Modified By" Binding="{Binding Path=ModifiedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Deleted Date" Binding="{Binding Path=DeletedDate}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Deleted By" Binding="{Binding Path=DeletedBy}" CanUserSort="True" ></DataGridTextColumn>
                            <DataGridTextColumn Width="100" Header="Active" Binding="{Binding Path=IsActive}" CanUserSort="True" ></DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Blue" />
                            </Style>

                            <ResourceDictionary x:Key="gridResources">
                                <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ResourceDictionary>
                        </DataGrid.Resources>
                    </DataGrid>

                    <uc:ucHoloNETEntry x:Name="ucHoloNETCollectionEntryShared"></uc:ucHoloNETEntry>
                    <!--<uc:ucHoloNETEntry x:Name="ucHoloNETCollectionEntry" DataContext="{Binding ElementName=gridDataEntries, Path=SelectedItem, Mode=OneWay}"></uc:ucHoloNETEntry>-->
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="stkpnlInfoHoloNETEntryShared" Visibility="Collapsed">
                    <TextBlock Margin="10,10,10,20" Text="Information" HorizontalAlignment="Center" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="20"  />
                    <ScrollViewer Margin="10" Height="422">
                        <StackPanel Orientation="Vertical" Margin="10">
                            <TextBlock Foreground="WhiteSmoke" FontSize="16" TextWrapping="WrapWithOverflow" Text="This popup (ucHoloNETEntryAndCollectionSharedPopup.xaml) shows how to easily extend the HoloNETEntryBase/HoloNETAuditEntryBase class in HoloNET ORM allowing you to perform simple CRUD operations such as Load, Save &amp; Delete without having to worry about the lower complexities of Holochain or configure and use the Holochain Conductor or API's. In this example the HoloNET Entry class (AvatarShared) that extends the HoloNETAuditEntryBase class is configured to use a shared HoloNET Client which is injected into it via it's constructor (DI)."></TextBlock>
                            <TextBlock Margin="0,10,0,0" Foreground="WhiteSmoke" FontSize="16" TextWrapping="WrapWithOverflow" Text="In this example, each hApp (row in the grid) uses it's own HoloNET Client that HoloNET Manager creates dynamically on the fly using the Holochain Conductor Admin API via the HoloNETClientAdmin connection created when HoloNET Manager first starts."></TextBlock>
                            <TextBlock Margin="0,10,0,0" Foreground="WhiteSmoke" FontSize="16" TextWrapping="WrapWithOverflow" Text="This example also uses the HoloNETObservableCollection which manages it's own list of HoloNET Entries (classes that extend the HoloNETEntryBase or HoloNETAuditEntryBase class) without having to worry about the lower complexities of Holochain or configure and use the Holochain Conductor or API's. You can easily add or remove HoloNET Entries by calling AddHoloNETEntryToCollectionAndSave or RemoveHoloNETEntryFromCollectionAndSave. These will both add/remove the entry and then update/save the collection. If you wish to only add or remove the entry from memory but not yet persist the changes then use the Add or Remove methods. You can then later batch update all changes by calling the SaveAllChanges method, this will also save any changes made to any of the HoloNET Entries in the collection. This example uses the AddHoloNETEntryToCollectionAndSave/RemoveHoloNETEntryFromCollectionAndSave methods to add/remove entries. In this example the HoloNETObservableCollection class is configured to have a shared HoloNETClient injected in via it's constructor (DI) similar to the HoloNETEntry example in this popup. It is in fact has the SAME HoloNETClient assigned to this hApp (row in the grid) injected into it via it's constructor (DI)."></TextBlock>
                            <TextBlock Margin="0,10,0,0" FontSize="16" Foreground="WhiteSmoke" TextWrapping="WrapWithOverflow" Text="The new HoloNET ORM (Object Relational Mapping) allows very easy &amp; rapid development of hApps. This consists of the HoloNETEntryBase, HoloNETAuditEntryBase, HoloNETCollection and HoloNETObservsableCollection classes. The first two can be extended to create your HoloNET Entry models that map directly onto your data structs in your rust hApp zome code. The second two are collections of these entries. You can then simply call basic CRUD methods on your classes such as Load, Save, Delete, etc making it very quick and easy to build hApps without having to worry about the lower complexitites of Holochain or configure and use the Holochain Conductor or API's. You also get change tracking, version control &amp; rollback functionality for free. HoloNET ORM allows any existing .net app/website/game/service to be rapidly and quickly converted to a Holochain hApp with very little code changes (you can simply add a new attribute to the properties in your models) and it will now map to your rust hApp structs (which WEB5 STAR ODK can also dynamically generate (it generates rust and c# code)."></TextBlock>
                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>

                <StackPanel Margin="0,20,0,0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="btnDataEntriesPopupClose" Style="{StaticResource ButtonStyle}" Cursor="Hand" Margin="5" Foreground="WhiteSmoke" HorizontalAlignment="Center" Width="170" FontSize="16" Content="Close" Background="{x:Null}" Click="btnDataEntriesPopupClose_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnDataEntriesPopupCloseGlowEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupCloseGlowEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupCloseGlowEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnHoloNETEntrySharedPopupSave" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Save Entry" Background="{x:Null}" Click="btnHoloNETEntrySharedPopupSave_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnHoloNETEntrySharedPopupSaveEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETEntrySharedPopupSaveEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnHoloNETEntrySharedPopupSaveEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button x:Name="btnDataEntriesPopupAddEntryToCollection" Visibility="Collapsed" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Add Entry" Background="{x:Null}" Click="btnDataEntriesPopupAddEntryToCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnDataEntriesPopupAddEntryToCollectionEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupAddEntryToCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupAddEntryToCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <!--<Button x:Name="btnDataEntriesPopupUpdateEntryInCollection" IsEnabled="{Binding Path=IsChanged, ElementName=ucHoloNETCollectionEntry}" Visibility="Collapsed" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="14" Content="Update Entry" Background="{x:Null}" Click="btnDataEntriesPopupUpdateEntryInCollection_Click">-->
                    <Button x:Name="btnDataEntriesPopupUpdateEntryInCollection" IsEnabled="False" Visibility="Collapsed" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Update Entry" Background="{x:Null}" Click="btnDataEntriesPopupUpdateEntryInCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnDataEntriesPopupUpdateEntryInCollectionEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupUpdateEntryInCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupUpdateEntryInCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="btnDataEntriesPopupRemoveEntryFromCollection" IsEnabled="False"  Visibility="Collapsed" Margin="5" Style="{StaticResource ButtonStyle}" Cursor="Hand" Foreground="WhiteSmoke" Width="170" FontSize="16" Content="Remove Entry" Background="{x:Null}" Click="btnDataEntriesPopupRemoveEntryFromCollection_Click">
                        <Button.Effect>
                            <DropShadowEffect x:Name="btnDataEntriesPopupRemoveEntryFromCollectionEffect" ShadowDepth="0"
Color="White"
Opacity="0"
BlurRadius="10"/>
                        </Button.Effect>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupRemoveEntryFromCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="0.0" To="1.0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
          Storyboard.TargetName="btnDataEntriesPopupRemoveEntryFromCollectionEffect" 
          Storyboard.TargetProperty="(DropShadowEffect.Opacity)"
          From="1" To="0" Duration="0:0:0.5" 
          AutoReverse="False" RepeatBehavior="1x" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
